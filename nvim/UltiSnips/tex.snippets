snippet gs04 "Acronym GS04" A
\asc{GS04}
endsnippet 

snippet gs08 "Acronym GS08" A
\asc{GS08}
endsnippet 

snippet ado "Acronym ado" A
\asc{ADO}
endsnippet 

snippet rso "Acronym rso" A
\asc{RSO}
endsnippet 

snippet smcu "Acronym smcu" A
\asc{SMCU}
endsnippet 

snippet rcpu "Acronym rcpu" A
\asc{RCPU}
endsnippet 

snippet verificiation "GLoassary verification" A
\gls{verificiation}
endsnippet

snippet validation " GLoassary validation" A
\gls{validation}
endsnippet

snippet "exploratory testing" " Gloassary exploratory testing" A
\gls{exploratory testing}
endsnippet

snippet "black box testing" " Gloassary black box testing" A
\gls{black box testing}
endsnippet

snippet im "itemize" bA
\begin{itemize}
	\item $1
\end{itemize}
endsnippet

snippet ii "item" bA
\item $1
endsnippet

snippet bf "Bolf face" iA
\textbf{$1}$0
endsnippet

snippet if "Italic face" iA
\textif{$1}$0
endsnippet

snippet sec "Section" biA
\section{$1}\label{sec:$2}
$0
endsnippet

snippet ssec "Sub-section" biA
\subsection{$1}\label{sec:$2}
$0
endsnippet

snippet sssec "Subsub-section" biA
\subsubsection{$1}\label{sec:$2}
$0
endsnippet
snippet ssssec "Subsubsub-section" biA
\subsubsection{$1}\label{sec:$2}
$0
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

post_jump "create_matrix_placeholders(snip)"
snippet 'arr(\d+),(\d+)' "LaTeX array" brA
\begin{array}{`!p
orient = ""
for _ in range(0, int(match.group(1))): orient += "l"
snip.rv = orient`}
`!p
snip.rv = create_matrix(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`
\end{array}
$0
endsnippet

global !p
def create_matrix_placeholders(snip):
	# Create anonymous snippet body
	anon_snippet_body = ""

	# Get start and end line number of expanded snippet
	start = snip.snippet_start[0]
	end = snip.snippet_end[0]

  # Append current line into anonymous snippet
	for i in range(start, end + 1):
		anon_snippet_body += snip.buffer[i]
		anon_snippet_body += "" if i == end else "\n"

	# Delete expanded snippet line till second to last line
	for i in range(start, end):
		del snip.buffer[start]

	# Empty last expanded snippet line while preserving the line
	snip.buffer[start] = ''

	# Expand anonymous snippet
	snip.expand_anon(anon_snippet_body)

def create_matrix(cols, rows, sep, start, end, offset=0):
	res = ""
	placeholder = 1 + offset 
	for _ in range(0, int(rows)):
		res += start + f"${placeholder} "
		placeholder += 1
		for _ in range(0, int(cols) - 1):
			res += sep + f" ${placeholder} "
			placeholder += 1
		res += end
	return res[:-1]
endglobal

post_jump "create_matrix_placeholders(snip)"
snippet 'bmat(\d+),(\d+)' "LaTeX bmatrix" brA
\begin{bmatrix}{
`!p
snip.rv = create_matrix(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`
\end{bmatrix}
$0
endsnippet

post_jump "create_matrix_placeholders(snip)"
snippet 'arr(\d+),(\d+)' "LaTeX array" brA
\begin{array}{`!p
orient = ""
for _ in range(0, int(match.group(1))): orient += "l"
snip.rv = orient`}
`!p
snip.rv = create_matrix(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`
\end{array}
$0
endsnippet

post_jump "create_matrix_placeholders(snip)"
snippet 'tab(\d+),(\d+)' "LaTeX table" brA
\begin{table}[h]
\centering
\caption{$1}
\begin{tabular}{`!p
orient = ""
for _ in range(0, int(match.group(1))): orient += "c "
snip.rv = orient`}
\\label{$2}
`!p
snip.rv = create_matrix(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n", 2)
`
\end{tabular}
\end{table}
endsnippet
